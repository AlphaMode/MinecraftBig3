--- a/net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket.java
+++ b/net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket.java
@@ -14,29 +_,29 @@
     public static final StreamCodec<RegistryFriendlyByteBuf, ClientboundLevelChunkWithLightPacket> STREAM_CODEC = Packet.codec(
         ClientboundLevelChunkWithLightPacket::write, ClientboundLevelChunkWithLightPacket::new
     );
-    private final int x;
-    private final int z;
+    private final me.alphamode.mcbig.math.BigInteger x;
+    private final me.alphamode.mcbig.math.BigInteger z;
     private final ClientboundLevelChunkPacketData chunkData;
     private final ClientboundLightUpdatePacketData lightData;
 
     public ClientboundLevelChunkWithLightPacket(LevelChunk p_285290_, LevelLightEngine p_285254_, @Nullable BitSet p_285350_, @Nullable BitSet p_285304_) {
         ChunkPos chunkpos = p_285290_.getPos();
-        this.x = chunkpos.x;
-        this.z = chunkpos.z;
+        this.x = chunkpos.x();
+        this.z = chunkpos.z();
         this.chunkData = new ClientboundLevelChunkPacketData(p_285290_);
         this.lightData = new ClientboundLightUpdatePacketData(chunkpos, p_285254_, p_285350_, p_285304_);
     }
 
     private ClientboundLevelChunkWithLightPacket(RegistryFriendlyByteBuf p_319989_) {
-        this.x = p_319989_.readInt();
-        this.z = p_319989_.readInt();
+        this.x = p_319989_.readBigInteger();
+        this.z = p_319989_.readBigInteger();
         this.chunkData = new ClientboundLevelChunkPacketData(p_319989_, this.x, this.z);
         this.lightData = new ClientboundLightUpdatePacketData(p_319989_, this.x, this.z);
     }
 
     private void write(RegistryFriendlyByteBuf p_320036_) {
-        p_320036_.writeInt(this.x);
-        p_320036_.writeInt(this.z);
+        p_320036_.writeBigInteger(this.x);
+        p_320036_.writeBigInteger(this.z);
         this.chunkData.write(p_320036_);
         this.lightData.write(p_320036_);
     }
@@ -50,11 +_,11 @@
         p_195716_.handleLevelChunkWithLight(this);
     }
 
-    public int getX() {
+    public me.alphamode.mcbig.math.BigInteger getX() {
         return this.x;
     }
 
-    public int getZ() {
+    public me.alphamode.mcbig.math.BigInteger getZ() {
         return this.z;
     }
 
