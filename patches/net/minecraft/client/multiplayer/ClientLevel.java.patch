--- a/net/minecraft/client/multiplayer/ClientLevel.java
+++ b/net/minecraft/client/multiplayer/ClientLevel.java
@@ -332,7 +_,7 @@
     }
 
     public void onChunkLoaded(ChunkPos p_171650_) {
-        this.tintCaches.forEach((p_194154_, p_194155_) -> p_194155_.invalidateForChunk(p_171650_.x, p_171650_.z));
+        this.tintCaches.forEach((p_194154_, p_194155_) -> p_194155_.invalidateForChunk(p_171650_.x(), p_171650_.z()));
         this.entityStorage.startTicking(p_171650_);
         this.levelRenderer.onChunkLoaded(p_171650_);
     }
@@ -342,7 +_,7 @@
     }
 
     @Override
-    public boolean hasChunk(int p_104737_, int p_104738_) {
+    public boolean hasChunk(me.alphamode.mcbig.math.BigInteger p_104737_, me.alphamode.mcbig.math.BigInteger p_104738_) {
         return true;
     }
 
@@ -374,7 +_,7 @@
         this.connection.getConnection().disconnect(Component.translatable("multiplayer.status.quitting"));
     }
 
-    public void animateTick(int p_104785_, int p_104786_, int p_104787_) {
+    public void animateTick(me.alphamode.mcbig.math.BigInteger p_104785_, int p_104786_, me.alphamode.mcbig.math.BigInteger p_104787_) {
         int i = 32;
         RandomSource randomsource = RandomSource.create();
         Block block = this.getMarkerParticleTarget();
@@ -400,11 +_,11 @@
     }
 
     public void doAnimateTick(
-        int p_233613_, int p_233614_, int p_233615_, int p_233616_, RandomSource p_233617_, @Nullable Block p_233618_, BlockPos.MutableBlockPos p_233619_
+            me.alphamode.mcbig.math.BigInteger p_233613_, int p_233614_, me.alphamode.mcbig.math.BigInteger p_233615_, int p_233616_, RandomSource p_233617_, @Nullable Block p_233618_, BlockPos.MutableBlockPos p_233619_
     ) {
-        int i = p_233613_ + this.random.nextInt(p_233616_) - this.random.nextInt(p_233616_);
+        me.alphamode.mcbig.math.BigInteger i = p_233613_.add(this.random.nextInt(p_233616_) - this.random.nextInt(p_233616_));
         int j = p_233614_ + this.random.nextInt(p_233616_) - this.random.nextInt(p_233616_);
-        int k = p_233615_ + this.random.nextInt(p_233616_) - this.random.nextInt(p_233616_);
+        me.alphamode.mcbig.math.BigInteger k = p_233615_.add(this.random.nextInt(p_233616_) - this.random.nextInt(p_233616_));
         p_233619_.set(i, j, k);
         BlockState blockstate = this.getBlockState(p_233619_);
         blockstate.getBlock().animateTick(blockstate, this, p_233619_, p_233617_);
@@ -420,7 +_,7 @@
         }
 
         if (p_233618_ == blockstate.getBlock()) {
-            this.addParticle(new BlockParticleOption(ParticleTypes.BLOCK_MARKER, blockstate), (double)i + 0.5, (double)j + 0.5, (double)k + 0.5, 0.0, 0.0, 0.0);
+            this.addParticle(new BlockParticleOption(ParticleTypes.BLOCK_MARKER, blockstate), (double)i.doubleValue() + 0.5, (double)j + 0.5, (double)k.doubleValue() + 0.5, 0.0, 0.0, 0.0);
         }
 
         if (!blockstate.isCollisionShapeFullBlock(this, p_233619_)) {
@@ -432,9 +_,9 @@
                         if (p_264703_.canSpawn(this.random)) {
                             this.addParticle(
                                 p_264703_.getOptions(),
-                                (double)p_233619_.getX() + this.random.nextDouble(),
-                                (double)p_233619_.getY() + this.random.nextDouble(),
-                                (double)p_233619_.getZ() + this.random.nextDouble(),
+                                (double)p_233619_.getBigX().doubleValue() + this.random.nextDouble(),
+                                (double)p_233619_.getBigY().doubleValue() + this.random.nextDouble(),
+                                (double)p_233619_.getBigZ().doubleValue() + this.random.nextDouble(),
                                 0.0,
                                 0.0,
                                 0.0
@@ -452,10 +_,10 @@
             if (d0 < 1.0) {
                 if (p_104693_) {
                     this.spawnFluidParticle(
-                        (double)p_104690_.getX(),
-                        (double)(p_104690_.getX() + 1),
-                        (double)p_104690_.getZ(),
-                        (double)(p_104690_.getZ() + 1),
+                        (double)p_104690_.getBigX().doubleValue(),
+                        (double)(p_104690_.getBigX().add()).doubleValue(),
+                        (double)p_104690_.getBigZ().doubleValue(),
+                        (double)(p_104690_.getBigZ().add()).doubleValue(),
                         (double)(p_104690_.getY() + 1) - 0.05,
                         p_104692_
                     );
@@ -479,10 +_,10 @@
 
     private void spawnParticle(BlockPos p_104695_, ParticleOptions p_104696_, VoxelShape p_104697_, double p_104698_) {
         this.spawnFluidParticle(
-            (double)p_104695_.getX() + p_104697_.min(Direction.Axis.X),
-            (double)p_104695_.getX() + p_104697_.max(Direction.Axis.X),
-            (double)p_104695_.getZ() + p_104697_.min(Direction.Axis.Z),
-            (double)p_104695_.getZ() + p_104697_.max(Direction.Axis.Z),
+            (double)p_104695_.getBigX().doubleValue() + p_104697_.min(Direction.Axis.X),
+            (double)p_104695_.getBigX().doubleValue() + p_104697_.max(Direction.Axis.X),
+            (double)p_104695_.getBigZ().doubleValue() + p_104697_.min(Direction.Axis.Z),
+            (double)p_104695_.getBigZ().doubleValue() + p_104697_.max(Direction.Axis.Z),
             p_104698_,
             p_104696_
         );
@@ -675,8 +_,8 @@
         this.levelRenderer.setBlockDirty(p_104759_, p_104760_, p_104761_);
     }
 
-    public void setSectionDirtyWithNeighbors(int p_104794_, int p_104795_, int p_104796_) {
-        this.levelRenderer.setSectionDirtyWithNeighbors(p_104794_, p_104795_, p_104796_);
+    public void setSectionDirtyWithNeighbors(me.alphamode.mcbig.math.BigInteger p_104794_, int p_104795_, me.alphamode.mcbig.math.BigInteger p_104796_) {
+        this.levelRenderer.setSectionDirtyWithNeighbors(p_104794_, me.alphamode.mcbig.math.BigInteger.val(p_104795_), p_104796_);
     }
 
     @Override
@@ -756,7 +_,7 @@
     }
 
     @Override
-    public Holder<Biome> getUncachedNoiseBiome(int p_205516_, int p_205517_, int p_205518_) {
+    public Holder<Biome> getUncachedNoiseBiome(me.alphamode.mcbig.math.BigInteger p_205516_, me.alphamode.mcbig.math.BigInteger p_205517_, me.alphamode.mcbig.math.BigInteger p_205518_) {
         return this.registryAccess().registryOrThrow(Registries.BIOME).getHolderOrThrow(Biomes.PLAINS);
     }
 
@@ -770,9 +_,9 @@
         return f1 * 0.8F + 0.2F;
     }
 
-    public Vec3 getSkyColor(Vec3 p_171661_, float p_171662_) {
+    public Vec3 getSkyColor(me.alphamode.mcbig.core.BigVec3 p_171661_, float p_171662_) {
         float f = this.getTimeOfDay(p_171662_);
-        Vec3 vec3 = p_171661_.subtract(2.0, 2.0, 2.0).scale(0.25);
+        me.alphamode.mcbig.core.BigVec3 vec3 = p_171661_.subtract(2.0, 2.0, 2.0).scale(0.25);
         BiomeManager biomemanager = this.getBiomeManager();
         Vec3 vec31 = CubicSampler.gaussianSampleVec3(
             vec3, (p_194161_, p_194162_, p_194163_) -> Vec3.fromRGB24(biomemanager.getNoiseBiomeAtQuart(p_194161_, p_194162_, p_194163_).value().getSkyColor())
@@ -911,7 +_,7 @@
             int l = 0;
             int i1 = 0;
             Cursor3D cursor3d = new Cursor3D(
-                p_104763_.getX() - i, p_104763_.getY(), p_104763_.getZ() - i, p_104763_.getX() + i, p_104763_.getY(), p_104763_.getZ() + i
+                p_104763_.getBigX().subtract(i), p_104763_.getBigY(), p_104763_.getBigZ().subtract(i), p_104763_.getBigX().add(i), p_104763_.getBigY(), p_104763_.getBigZ().add(i)
             );
 
             int j1;
@@ -952,7 +_,7 @@
     }
 
     @Override
-    public void gameEvent(Holder<GameEvent> p_316478_, Vec3 p_233640_, GameEvent.Context p_233641_) {
+    public void gameEvent(Holder<GameEvent> p_316478_, me.alphamode.mcbig.core.BigVec3 p_233640_, GameEvent.Context p_233641_) {
     }
 
     protected Map<MapId, MapItemSavedData> getAllMapData() {
