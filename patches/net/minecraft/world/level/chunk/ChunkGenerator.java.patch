--- a/net/minecraft/world/level/chunk/ChunkGenerator.java
+++ b/net/minecraft/world/level/chunk/ChunkGenerator.java
@@ -223,7 +_,7 @@
             BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
             for(ChunkPos chunkpos : list) {
-                blockpos$mutableblockpos.set(SectionPos.sectionToBlockCoord(chunkpos.x, 8), 32, SectionPos.sectionToBlockCoord(chunkpos.z, 8));
+                blockpos$mutableblockpos.set(SectionPos.sectionToBlockCoord(chunkpos.x(), 8), me.alphamode.mcbig.core.BigConstants.Ints.THIRTY_TWO, SectionPos.sectionToBlockCoord(chunkpos.z(), 8));
                 double d1 = blockpos$mutableblockpos.distSqr(p_223185_);
                 boolean flag = pair == null || d1 < d0;
                 if (flag) {
@@ -261,7 +_,7 @@
                 if (flag || flag1) {
                     int l = p_223192_ + i * j;
                     int i1 = p_223193_ + i * k;
-                    ChunkPos chunkpos = p_223197_.getPotentialStructureChunk(p_223196_, l, i1);
+                    ChunkPos chunkpos = p_223197_.getPotentialStructureChunk(p_223196_, me.alphamode.mcbig.math.BigInteger.val(l), me.alphamode.mcbig.math.BigInteger.val(i1));
                     Pair<BlockPos, Holder<Structure>> pair = getStructureGeneratingAt(p_223189_, p_223190_, p_223191_, p_223195_, p_223197_, chunkpos);
                     if (pair != null) {
                         return pair;
@@ -289,7 +_,7 @@
                     return Pair.of(p_223203_.getLocatePos(p_223204_), holder);
                 }
 
-                ChunkAccess chunkaccess = p_223200_.getChunk(p_223204_.x, p_223204_.z, ChunkStatus.STRUCTURE_STARTS);
+                ChunkAccess chunkaccess = p_223200_.getChunk(p_223204_.x(), p_223204_.z(), ChunkStatus.STRUCTURE_STARTS);
                 StructureStart structurestart = p_223201_.getStartForStructure(SectionPos.bottomOf(chunkaccess), holder.value(), chunkaccess);
                 if (structurestart != null && structurestart.isValid() && (!p_223202_ || tryAddReference(p_223201_, structurestart))) {
                     return Pair.of(p_223203_.getLocatePos(structurestart.getChunkPos()), holder);
@@ -321,7 +_,7 @@
             long i = worldgenrandom.setDecorationSeed(p_223087_.getSeed(), blockpos.getX(), blockpos.getZ());
             Set<Holder<Biome>> set = new ObjectArraySet<>();
             ChunkPos.rangeClosed(sectionpos.chunk(), 1).forEach(p_223093_ -> {
-                ChunkAccess chunkaccess = p_223087_.getChunk(p_223093_.x, p_223093_.z);
+                ChunkAccess chunkaccess = p_223087_.getChunk(p_223093_.x(), p_223093_.z());
 
                 for(LevelChunkSection levelchunksection : chunkaccess.getSections()) {
                     levelchunksection.getBiomes().getAll(set::add);
@@ -397,7 +_,7 @@
                 p_223087_.setCurrentlyGenerating(null);
             } catch (Exception exception2) {
                 CrashReport crashreport = CrashReport.forThrowable(exception2, "Biome decoration");
-                crashreport.addCategory("Generation").setDetail("CenterX", chunkpos.x).setDetail("CenterZ", chunkpos.z).setDetail("Seed", i);
+                crashreport.addCategory("Generation").setDetail("CenterX", chunkpos.x()).setDetail("CenterZ", chunkpos.z()).setDetail("Seed", i);
                 throw new ReportedException(crashreport);
             }
         }
@@ -405,12 +_,12 @@
 
     private static BoundingBox getWritableArea(ChunkAccess p_187718_) {
         ChunkPos chunkpos = p_187718_.getPos();
-        int i = chunkpos.getMinBlockX();
-        int j = chunkpos.getMinBlockZ();
+        me.alphamode.mcbig.math.BigInteger i = chunkpos.getBigMinBlockX();
+        me.alphamode.mcbig.math.BigInteger j = chunkpos.getBigMinBlockZ();
         LevelHeightAccessor levelheightaccessor = p_187718_.getHeightAccessorForGeneration();
         int k = levelheightaccessor.getMinBuildHeight() + 1;
         int l = levelheightaccessor.getMaxBuildHeight() - 1;
-        return new BoundingBox(i, k, j, i + 15, l, j + 15);
+        return new BoundingBox(i, me.alphamode.mcbig.math.BigInteger.val(k), j, i.add(me.alphamode.mcbig.core.BigConstants.Ints.FIFTEEN), me.alphamode.mcbig.math.BigInteger.val(l), j.add(me.alphamode.mcbig.core.BigConstants.Ints.FIFTEEN));
     }
 
     public abstract void buildSurface(WorldGenRegion p_223050_, StructureManager p_223051_, RandomState p_223052_, ChunkAccess p_223053_);
@@ -430,9 +_,9 @@
     public WeightedRandomList<MobSpawnSettings.SpawnerData> getMobsAt(
         Holder<Biome> p_223134_, StructureManager p_223135_, MobCategory p_223136_, BlockPos p_223137_
     ) {
-        Map<Structure, LongSet> map = p_223135_.getAllStructuresAt(p_223137_);
+        Map<Structure, it.unimi.dsi.fastutil.objects.ObjectSet<ChunkPos>> map = p_223135_.getAllStructuresAt(p_223137_);
 
-        for(Entry<Structure, LongSet> entry : map.entrySet()) {
+        for(Entry<Structure, it.unimi.dsi.fastutil.objects.ObjectSet<ChunkPos>> entry : map.entrySet()) {
             Structure structure = entry.getKey();
             StructureSpawnOverride structurespawnoverride = structure.spawnOverrides().get(p_223136_);
             if (structurespawnoverride != null) {
@@ -475,7 +_,7 @@
                         }
                     }
         
-                    if (structureplacement.isStructureChunk(p_256505_, chunkpos.x, chunkpos.z)) {
+                    if (structureplacement.isStructureChunk(p_256505_, chunkpos.x(), chunkpos.z())) {
                         if (list.size() == 1) {
                             this.tryGenerateStructure(
                                 list.get(0), p_255934_, p_255835_, randomstate, p_255832_, p_256505_.getLevelSeed(), p_255767_, chunkpos, sectionpos
@@ -484,7 +_,7 @@
                             ArrayList<StructureSet.StructureSelectionEntry> arraylist = new ArrayList<>(list.size());
                             arraylist.addAll(list);
                             WorldgenRandom worldgenrandom = new WorldgenRandom(new LegacyRandomSource(0L));
-                            worldgenrandom.setLargeFeatureSeed(p_256505_.getLevelSeed(), chunkpos.x, chunkpos.z);
+                            worldgenrandom.setLargeFeatureSeed(p_256505_.getLevelSeed(), chunkpos.x().longValue(), chunkpos.z().longValue());
                             int i = 0;
         
                             for(StructureSet.StructureSelectionEntry structureset$structureselectionentry1 : arraylist) {
@@ -562,19 +_,19 @@
     public void createReferences(WorldGenLevel p_223077_, StructureManager p_223078_, ChunkAccess p_223079_) {
         int i = 8;
         ChunkPos chunkpos = p_223079_.getPos();
-        int j = chunkpos.x;
-        int k = chunkpos.z;
-        int l = chunkpos.getMinBlockX();
-        int i1 = chunkpos.getMinBlockZ();
+        me.alphamode.mcbig.math.BigInteger j = chunkpos.x();
+        me.alphamode.mcbig.math.BigInteger k = chunkpos.z();
+        me.alphamode.mcbig.math.BigInteger l = chunkpos.getBigMinBlockX();
+        me.alphamode.mcbig.math.BigInteger i1 = chunkpos.getBigMinBlockZ();
         SectionPos sectionpos = SectionPos.bottomOf(p_223079_);
 
-        for(int j1 = j - 8; j1 <= j + 8; ++j1) {
-            for(int k1 = k - 8; k1 <= k + 8; ++k1) {
-                long l1 = ChunkPos.asLong(j1, k1);
+        for(me.alphamode.mcbig.math.BigInteger j1 = j.subtract(me.alphamode.mcbig.core.BigConstants.Ints.EIGHT); j1.compareTo(j.add(me.alphamode.mcbig.core.BigConstants.Ints.EIGHT)) <= 0; j1 = j1.add()) {
+            for(me.alphamode.mcbig.math.BigInteger k1 = k.subtract(me.alphamode.mcbig.core.BigConstants.Ints.EIGHT); k1.compareTo(k.add(me.alphamode.mcbig.core.BigConstants.Ints.EIGHT)) <= 0; k1 = k1.add()) {
+                ChunkPos l1 = new ChunkPos(j1, k1);
 
                 for(StructureStart structurestart : p_223077_.getChunk(j1, k1).getAllStarts().values()) {
                     try {
-                        if (structurestart.isValid() && structurestart.getBoundingBox().intersects(l, i1, l + 15, i1 + 15)) {
+                        if (structurestart.isValid() && structurestart.getBoundingBox().intersects(l, i1, l.add(me.alphamode.mcbig.core.BigConstants.Ints.FIFTEEN), i1.add(me.alphamode.mcbig.core.BigConstants.Ints.FIFTEEN))) {
                             p_223078_.addReferenceForStructure(sectionpos, structurestart.getStructure(), l1, p_223079_);
                             DebugPackets.sendStructurePacket(p_223077_, structurestart);
                         }
@@ -602,15 +_,15 @@
 
     public abstract int getMinY();
 
-    public abstract int getBaseHeight(int p_223032_, int p_223033_, Heightmap.Types p_223034_, LevelHeightAccessor p_223035_, RandomState p_223036_);
-
-    public abstract NoiseColumn getBaseColumn(int p_223028_, int p_223029_, LevelHeightAccessor p_223030_, RandomState p_223031_);
-
-    public int getFirstFreeHeight(int p_223222_, int p_223223_, Heightmap.Types p_223224_, LevelHeightAccessor p_223225_, RandomState p_223226_) {
+    public abstract int getBaseHeight(me.alphamode.mcbig.math.BigInteger p_223032_, me.alphamode.mcbig.math.BigInteger p_223033_, Heightmap.Types p_223034_, LevelHeightAccessor p_223035_, RandomState p_223036_);
+
+    public abstract NoiseColumn getBaseColumn(me.alphamode.mcbig.math.BigInteger p_223028_, me.alphamode.mcbig.math.BigInteger p_223029_, LevelHeightAccessor p_223030_, RandomState p_223031_);
+
+    public int getFirstFreeHeight(me.alphamode.mcbig.math.BigInteger p_223222_, me.alphamode.mcbig.math.BigInteger p_223223_, Heightmap.Types p_223224_, LevelHeightAccessor p_223225_, RandomState p_223226_) {
         return this.getBaseHeight(p_223222_, p_223223_, p_223224_, p_223225_, p_223226_);
     }
 
-    public int getFirstOccupiedHeight(int p_223236_, int p_223237_, Heightmap.Types p_223238_, LevelHeightAccessor p_223239_, RandomState p_223240_) {
+    public int getFirstOccupiedHeight(me.alphamode.mcbig.math.BigInteger p_223236_, me.alphamode.mcbig.math.BigInteger p_223237_, Heightmap.Types p_223238_, LevelHeightAccessor p_223239_, RandomState p_223240_) {
         return this.getBaseHeight(p_223236_, p_223237_, p_223238_, p_223239_, p_223240_) - 1;
     }
 
