--- a/net/minecraft/world/level/chunk/storage/RegionFileStorage.java
+++ b/net/minecraft/world/level/chunk/storage/RegionFileStorage.java
@@ -17,8 +_,8 @@
 public final class RegionFileStorage implements AutoCloseable {
     public static final String ANVIL_EXTENSION = ".mca";
     private static final int MAX_CACHE_SIZE = 256;
-    private final Long2ObjectLinkedOpenHashMap<RegionFile> regionCache = new Long2ObjectLinkedOpenHashMap<>();
     private final RegionStorageInfo info;
+    private final it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap<ChunkPos, RegionFile> regionCache = new it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap<>();
     private final Path folder;
     private final boolean sync;
 
@@ -29,8 +_,8 @@
     }
 
     private RegionFile getRegionFile(ChunkPos p_63712_) throws IOException {
-        long i = ChunkPos.asLong(p_63712_.getRegionX(), p_63712_.getRegionZ());
-        RegionFile regionfile = this.regionCache.getAndMoveToFirst(i);
+//        ChunkPos i = ChunkPos.asLong(p_63712_.getRegionX(), p_63712_.getRegionZ());
+        RegionFile regionfile = this.regionCache.getAndMoveToFirst(p_63712_);
         if (regionfile != null) {
             return regionfile;
         } else {
@@ -41,7 +_,7 @@
             FileUtil.createDirectoriesSafe(this.folder);
             Path path = this.folder.resolve("r." + p_63712_.getRegionX() + "." + p_63712_.getRegionZ() + ".mca");
             RegionFile regionfile1 = new RegionFile(this.info, path, this.folder, this.sync);
-            this.regionCache.putAndMoveToFirst(i, regionfile1);
+            this.regionCache.putAndMoveToFirst(p_63712_, regionfile1);
             return regionfile1;
         }
     }
