--- a/net/minecraft/world/level/NaturalSpawner.java
+++ b/net/minecraft/world/level/NaturalSpawner.java
@@ -75,7 +_,7 @@
             if (mobcategory != MobCategory.MISC) {
                 BlockPos blockpos = entity.blockPosition();
                 p_186527_.query(
-                    ChunkPos.asLong(blockpos),
+                    new ChunkPos(blockpos),
                     p_275163_ -> {
                         MobSpawnSettings.MobSpawnCost mobspawnsettings$mobspawncost = getRoughBiome(blockpos, p_275163_)
                             .getMobSettings()
@@ -98,7 +_,7 @@
     }
 
     static Biome getRoughBiome(BlockPos p_47096_, ChunkAccess p_47097_) {
-        return p_47097_.getNoiseBiome(QuartPos.fromBlock(p_47096_.getX()), QuartPos.fromBlock(p_47096_.getY()), QuartPos.fromBlock(p_47096_.getZ())).value();
+        return p_47097_.getNoiseBiome(QuartPos.fromBlock(p_47096_.getBigX()), QuartPos.fromBlock(p_47096_.getBigY()), QuartPos.fromBlock(p_47096_.getBigZ())).value();
     }
 
     public static void spawnForChunk(
@@ -152,8 +_,8 @@
             int j = 0;
 
             for(int k = 0; k < 3; ++k) {
-                int l = p_47042_.getX();
-                int i1 = p_47042_.getZ();
+                me.alphamode.mcbig.math.BigInteger l = p_47042_.getBigX();
+                me.alphamode.mcbig.math.BigInteger i1 = p_47042_.getBigZ();
                 int j1 = 6;
                 MobSpawnSettings.SpawnerData mobspawnsettings$spawnerdata = null;
                 SpawnGroupData spawngroupdata = null;
@@ -161,11 +_,11 @@
                 int l1 = 0;
 
                 for(int i2 = 0; i2 < k1; ++i2) {
-                    l += p_47040_.random.nextInt(6) - p_47040_.random.nextInt(6);
-                    i1 += p_47040_.random.nextInt(6) - p_47040_.random.nextInt(6);
+                    l = l.add(p_47040_.random.nextInt(6) - p_47040_.random.nextInt(6));
+                    i1 = i1.add(p_47040_.random.nextInt(6) - p_47040_.random.nextInt(6));
                     blockpos$mutableblockpos.set(l, i, i1);
-                    double d0 = (double)l + 0.5;
-                    double d1 = (double)i1 + 0.5;
+                    double d0 = (double)l.doubleValue() + 0.5;
+                    double d1 = (double)i1.doubleValue() + 0.5;
                     Player player = p_47040_.getNearestPlayer(d0, (double)i, d1, -1.0, false);
                     if (player != null) {
                         double d2 = player.distanceToSqr(d0, (double)i, d1);
@@ -221,7 +_,7 @@
         if (p_47028_ <= 576.0) {
             return false;
         } else if (p_47025_.getSharedSpawnPos()
-            .closerToCenterThan(new Vec3((double)p_47027_.getX() + 0.5, (double)p_47027_.getY(), (double)p_47027_.getZ() + 0.5), 24.0)) {
+            .closerToCenterThan(new Vec3((double)p_47027_.getBigX().doubleValue() + 0.5, (double)p_47027_.getBigY().doubleValue(), (double)p_47027_.getBigZ().doubleValue() + 0.5), 24.0)) {
             return false;
         } else {
             return Objects.equals(new ChunkPos(p_47027_), p_47026_.getPos()) || p_47025_.isNaturalSpawningAllowed(p_47027_);
@@ -250,7 +_,7 @@
             } else if (!SpawnPlacements.checkSpawnRules(entitytype, p_220422_, MobSpawnType.NATURAL, p_220427_, p_220422_.random)) {
                 return false;
             } else {
-                return p_220422_.noCollision(entitytype.getAABB((double)p_220427_.getX() + 0.5, (double)p_220427_.getY(), (double)p_220427_.getZ() + 0.5));
+                return p_220422_.noCollision(entitytype.getAABB((double)p_220427_.getBigX().doubleValue() + 0.5, (double)p_220427_.getY(), (double)p_220427_.getBigZ().doubleValue() + 0.5));
             }
         } else {
             return false;
@@ -326,8 +_,8 @@
 
     private static BlockPos getRandomPosWithin(Level p_47063_, LevelChunk p_47064_) {
         ChunkPos chunkpos = p_47064_.getPos();
-        int i = chunkpos.getMinBlockX() + p_47063_.random.nextInt(16);
-        int j = chunkpos.getMinBlockZ() + p_47063_.random.nextInt(16);
+        me.alphamode.mcbig.math.BigInteger i = chunkpos.getBigMinBlockX().add(p_47063_.random.nextInt(16));
+        me.alphamode.mcbig.math.BigInteger j = chunkpos.getBigMinBlockZ().add(p_47063_.random.nextInt(16));
         int k = p_47064_.getHeight(Heightmap.Types.WORLD_SURFACE, i, j) + 1;
         int l = Mth.randomBetweenInclusive(p_47063_.random, p_47063_.getMinBuildHeight(), k);
         return new BlockPos(i, l, j);
@@ -379,8 +_,8 @@
         MobSpawnSettings mobspawnsettings = p_220452_.value().getMobSettings();
         WeightedRandomList<MobSpawnSettings.SpawnerData> weightedrandomlist = mobspawnsettings.getMobs(MobCategory.CREATURE);
         if (!weightedrandomlist.isEmpty()) {
-            int i = p_220453_.getMinBlockX();
-            int j = p_220453_.getMinBlockZ();
+            me.alphamode.mcbig.math.BigInteger i = p_220453_.getBigMinBlockX();
+            me.alphamode.mcbig.math.BigInteger j = p_220453_.getBigMinBlockZ();
 
             while(p_220454_.nextFloat() < mobspawnsettings.getCreatureProbability()) {
                 Optional<MobSpawnSettings.SpawnerData> optional = weightedrandomlist.getRandom(p_220454_);
@@ -389,10 +_,10 @@
                     int k = mobspawnsettings$spawnerdata.minCount
                         + p_220454_.nextInt(1 + mobspawnsettings$spawnerdata.maxCount - mobspawnsettings$spawnerdata.minCount);
                     SpawnGroupData spawngroupdata = null;
-                    int l = i + p_220454_.nextInt(16);
-                    int i1 = j + p_220454_.nextInt(16);
-                    int j1 = l;
-                    int k1 = i1;
+                    me.alphamode.mcbig.math.BigInteger l = i.add(p_220454_.nextInt(16));
+                    me.alphamode.mcbig.math.BigInteger i1 = j.add(p_220454_.nextInt(16));
+                    me.alphamode.mcbig.math.BigInteger j1 = l;
+                    me.alphamode.mcbig.math.BigInteger k1 = i1;
 
                     for(int l1 = 0; l1 < k; ++l1) {
                         boolean flag = false;
@@ -404,8 +_,8 @@
                                     SpawnPlacements.getPlacementType(mobspawnsettings$spawnerdata.type), p_220451_, blockpos, mobspawnsettings$spawnerdata.type
                                 )) {
                                 float f = mobspawnsettings$spawnerdata.type.getWidth();
-                                double d0 = Mth.clamp((double)l, (double)i + (double)f, (double)i + 16.0 - (double)f);
-                                double d1 = Mth.clamp((double)i1, (double)j + (double)f, (double)j + 16.0 - (double)f);
+                                double d0 = Mth.clamp((double)l.doubleValue(), (double)i.doubleValue() + (double)f, (double)i.doubleValue() + 16.0 - (double)f);
+                                double d1 = Mth.clamp((double)i1.doubleValue(), (double)j.doubleValue() + (double)f, (double)j.doubleValue() + 16.0 - (double)f);
                                 if (!p_220451_.noCollision(mobspawnsettings$spawnerdata.type.getAABB(d0, (double)blockpos.getY(), d1))
                                     || !SpawnPlacements.checkSpawnRules(
                                         mobspawnsettings$spawnerdata.type,
@@ -441,13 +_,13 @@
                                 }
                             }
 
-                            l += p_220454_.nextInt(5) - p_220454_.nextInt(5);
+                            l = l.add(p_220454_.nextInt(5) - p_220454_.nextInt(5));
 
-                            for(i1 += p_220454_.nextInt(5) - p_220454_.nextInt(5);
-                                l < i || l >= i + 16 || i1 < j || i1 >= j + 16;
-                                i1 = k1 + p_220454_.nextInt(5) - p_220454_.nextInt(5)
+                            for(i1 = i1.add(p_220454_.nextInt(5) - p_220454_.nextInt(5));
+                                l.compareTo(i) < 0 || l.compareTo(i.add(me.alphamode.mcbig.core.BigConstants.Ints.SIXTEEN)) >= 0 || i1.compareTo(j) < 0 || i1.compareTo(j.add(me.alphamode.mcbig.core.BigConstants.Ints.SIXTEEN)) >= 0;
+                                i1 = k1.add(p_220454_.nextInt(5) - p_220454_.nextInt(5))
                             ) {
-                                l = j1 + p_220454_.nextInt(5) - p_220454_.nextInt(5);
+                                l = j1.add(p_220454_.nextInt(5) - p_220454_.nextInt(5));
                             }
                         }
                     }
@@ -456,7 +_,7 @@
         }
     }
 
-    private static BlockPos getTopNonCollidingPos(LevelReader p_47066_, EntityType<?> p_47067_, int p_47068_, int p_47069_) {
+    private static BlockPos getTopNonCollidingPos(LevelReader p_47066_, EntityType<?> p_47067_, me.alphamode.mcbig.math.BigInteger p_47068_, me.alphamode.mcbig.math.BigInteger p_47069_) {
         int i = p_47066_.getHeight(SpawnPlacements.getHeightmapType(p_47067_), p_47068_, p_47069_);
         BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos(p_47068_, i, p_47069_);
         if (p_47066_.dimensionType().hasCeiling()) {
@@ -486,7 +_,7 @@
 
     @FunctionalInterface
     public interface ChunkGetter {
-        void query(long p_47104_, Consumer<LevelChunk> p_47105_);
+        void query(ChunkPos p_47104_, Consumer<LevelChunk> p_47105_);
     }
 
     @FunctionalInterface
