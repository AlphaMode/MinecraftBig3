--- a/net/minecraft/world/level/levelgen/structure/placement/StructurePlacement.java
+++ b/net/minecraft/world/level/levelgen/structure/placement/StructurePlacement.java
@@ -79,49 +_,49 @@
         return this.exclusionZone;
     }
 
-    public boolean isStructureChunk(ChunkGeneratorStructureState p_256635_, int p_255959_, int p_256065_) {
+    public boolean isStructureChunk(ChunkGeneratorStructureState p_256635_, me.alphamode.mcbig.math.BigInteger p_255959_, me.alphamode.mcbig.math.BigInteger p_256065_) {
         return this.isPlacementChunk(p_256635_, p_255959_, p_256065_)
             && this.applyAdditionalChunkRestrictions(p_255959_, p_256065_, p_256635_.getLevelSeed())
             && this.applyInteractionsWithOtherStructures(p_256635_, p_255959_, p_256065_);
     }
 
-    public boolean applyAdditionalChunkRestrictions(int p_321784_, int p_321723_, long p_321834_) {
+    public boolean applyAdditionalChunkRestrictions(me.alphamode.mcbig.math.BigInteger p_321784_, me.alphamode.mcbig.math.BigInteger p_321723_, long p_321834_) {
         return !(this.frequency < 1.0F) || this.frequencyReductionMethod.shouldGenerate(p_321834_, this.salt, p_321784_, p_321723_, this.frequency);
     }
 
-    public boolean applyInteractionsWithOtherStructures(ChunkGeneratorStructureState p_321651_, int p_321696_, int p_321521_) {
+    public boolean applyInteractionsWithOtherStructures(ChunkGeneratorStructureState p_321651_, me.alphamode.mcbig.math.BigInteger p_321696_, me.alphamode.mcbig.math.BigInteger p_321521_) {
         return !this.exclusionZone.isPresent() || !this.exclusionZone.get().isPlacementForbidden(p_321651_, p_321696_, p_321521_);
     }
 
-    protected abstract boolean isPlacementChunk(ChunkGeneratorStructureState p_256034_, int p_227046_, int p_227047_);
+    protected abstract boolean isPlacementChunk(ChunkGeneratorStructureState p_256034_, me.alphamode.mcbig.math.BigInteger p_227046_, me.alphamode.mcbig.math.BigInteger p_227047_);
 
     public BlockPos getLocatePos(ChunkPos p_227040_) {
-        return new BlockPos(p_227040_.getMinBlockX(), 0, p_227040_.getMinBlockZ()).offset(this.locateOffset());
+        return new BlockPos(p_227040_.getBigMinBlockX(), 0, p_227040_.getBigMinBlockZ()).offset(this.locateOffset());
     }
 
     public abstract StructurePlacementType<?> type();
 
-    private static boolean probabilityReducer(long p_227034_, int p_227035_, int p_227036_, int p_227037_, float p_227038_) {
+    private static boolean probabilityReducer(long p_227034_, int p_227035_, me.alphamode.mcbig.math.BigInteger p_227036_, me.alphamode.mcbig.math.BigInteger p_227037_, float p_227038_) {
         WorldgenRandom worldgenrandom = new WorldgenRandom(new LegacyRandomSource(0L));
-        worldgenrandom.setLargeFeatureWithSalt(p_227034_, p_227035_, p_227036_, p_227037_);
+        worldgenrandom.setLargeFeatureWithSalt(p_227034_, p_227035_, p_227036_.longValue(), p_227037_.longValue());
         return worldgenrandom.nextFloat() < p_227038_;
     }
 
-    private static boolean legacyProbabilityReducerWithDouble(long p_227049_, int p_227050_, int p_227051_, int p_227052_, float p_227053_) {
+    private static boolean legacyProbabilityReducerWithDouble(long p_227049_, int p_227050_, me.alphamode.mcbig.math.BigInteger p_227051_, me.alphamode.mcbig.math.BigInteger p_227052_, float p_227053_) {
         WorldgenRandom worldgenrandom = new WorldgenRandom(new LegacyRandomSource(0L));
-        worldgenrandom.setLargeFeatureSeed(p_227049_, p_227051_, p_227052_);
+        worldgenrandom.setLargeFeatureSeed(p_227049_, p_227051_.longValue(), p_227052_.longValue());
         return worldgenrandom.nextDouble() < (double)p_227053_;
     }
 
-    private static boolean legacyArbitrarySaltProbabilityReducer(long p_227061_, int p_227062_, int p_227063_, int p_227064_, float p_227065_) {
+    private static boolean legacyArbitrarySaltProbabilityReducer(long p_227061_, int p_227062_, me.alphamode.mcbig.math.BigInteger p_227063_, me.alphamode.mcbig.math.BigInteger p_227064_, float p_227065_) {
         WorldgenRandom worldgenrandom = new WorldgenRandom(new LegacyRandomSource(0L));
-        worldgenrandom.setLargeFeatureWithSalt(p_227061_, p_227063_, p_227064_, 10387320);
+        worldgenrandom.setLargeFeatureWithSalt(p_227061_, p_227063_.longValue(), p_227064_.longValue(), 10387320);
         return worldgenrandom.nextFloat() < p_227065_;
     }
 
-    private static boolean legacyPillagerOutpostReducer(long p_227067_, int p_227068_, int p_227069_, int p_227070_, float p_227071_) {
-        int i = p_227069_ >> 4;
-        int j = p_227070_ >> 4;
+    private static boolean legacyPillagerOutpostReducer(long p_227067_, int p_227068_, me.alphamode.mcbig.math.BigInteger p_227069_, me.alphamode.mcbig.math.BigInteger p_227070_, float p_227071_) {
+        long i = p_227069_.longValue() >> 4;
+        long j = p_227070_.longValue() >> 4;
         WorldgenRandom worldgenrandom = new WorldgenRandom(new LegacyRandomSource(0L));
         worldgenrandom.setSeed((long)(i ^ j << 4) ^ p_227067_);
         worldgenrandom.nextInt();
@@ -140,14 +_,14 @@
                     .apply(p_259015_, StructurePlacement.ExclusionZone::new)
         );
 
-        boolean isPlacementForbidden(ChunkGeneratorStructureState p_255745_, int p_255634_, int p_255892_) {
+        boolean isPlacementForbidden(ChunkGeneratorStructureState p_255745_, me.alphamode.mcbig.math.BigInteger p_255634_, me.alphamode.mcbig.math.BigInteger p_255892_) {
             return p_255745_.hasStructureChunkInRange(this.otherSet, p_255634_, p_255892_, this.chunkCount);
         }
     }
 
     @FunctionalInterface
     public interface FrequencyReducer {
-        boolean shouldGenerate(long p_227099_, int p_227100_, int p_227101_, int p_227102_, float p_227103_);
+        boolean shouldGenerate(long p_227099_, int p_227100_, me.alphamode.mcbig.math.BigInteger p_227101_, me.alphamode.mcbig.math.BigInteger p_227102_, float p_227103_);
     }
 
     public static enum FrequencyReductionMethod implements StringRepresentable {
@@ -167,7 +_,7 @@
             this.reducer = p_227117_;
         }
 
-        public boolean shouldGenerate(long p_227120_, int p_227121_, int p_227122_, int p_227123_, float p_227124_) {
+        public boolean shouldGenerate(long p_227120_, int p_227121_, me.alphamode.mcbig.math.BigInteger p_227122_, me.alphamode.mcbig.math.BigInteger p_227123_, float p_227124_) {
             return this.reducer.shouldGenerate(p_227120_, p_227121_, p_227122_, p_227123_, p_227124_);
         }
 
