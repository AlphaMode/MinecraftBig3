--- a/net/minecraft/world/level/levelgen/blending/BlendingData.java
+++ b/net/minecraft/world/level/levelgen/blending/BlendingData.java
@@ -106,7 +_,7 @@
     }
 
     @Nullable
-    public static BlendingData getOrUpdateBlendingData(WorldGenRegion p_190305_, int p_190306_, int p_190307_) {
+    public static BlendingData getOrUpdateBlendingData(WorldGenRegion p_190305_, me.alphamode.mcbig.math.BigInteger p_190306_, me.alphamode.mcbig.math.BigInteger p_190307_) {
         ChunkAccess chunkaccess = p_190305_.getChunk(p_190306_, p_190307_);
         BlendingData blendingdata = chunkaccess.getBlendingData();
         if (blendingdata != null && chunkaccess.getHighestGeneratedStatus().isOrAfter(ChunkStatus.BIOMES)) {
@@ -117,12 +_,12 @@
         }
     }
 
-    public static Set<Direction8> sideByGenerationAge(WorldGenLevel p_197066_, int p_197067_, int p_197068_, boolean p_197069_) {
+    public static Set<Direction8> sideByGenerationAge(WorldGenLevel p_197066_, me.alphamode.mcbig.math.BigInteger p_197067_, me.alphamode.mcbig.math.BigInteger p_197068_, boolean p_197069_) {
         Set<Direction8> set = EnumSet.noneOf(Direction8.class);
 
         for(Direction8 direction8 : Direction8.values()) {
-            int i = p_197067_ + direction8.getStepX();
-            int j = p_197068_ + direction8.getStepZ();
+            me.alphamode.mcbig.math.BigInteger i = p_197067_.add(direction8.getStepX());
+            me.alphamode.mcbig.math.BigInteger j = p_197068_.add(direction8.getStepZ());
             if (p_197066_.getChunk(i, j).isOldNoiseGeneration() == p_197069_) {
                 set.add(direction8);
             }
@@ -185,7 +_,7 @@
     private int getHeightAtXZ(ChunkAccess p_190311_, int p_190312_, int p_190313_) {
         int i;
         if (p_190311_.hasPrimedHeightmap(Heightmap.Types.WORLD_SURFACE_WG)) {
-            i = Math.min(p_190311_.getHeight(Heightmap.Types.WORLD_SURFACE_WG, p_190312_, p_190313_) + 1, this.areaWithOldGeneration.getMaxBuildHeight());
+            i = Math.min(p_190311_.getHeight(Heightmap.Types.WORLD_SURFACE_WG, me.alphamode.mcbig.math.BigInteger.val(p_190312_), me.alphamode.mcbig.math.BigInteger.val(p_190313_)) + 1, this.areaWithOldGeneration.getMaxBuildHeight());
         } else {
             i = this.areaWithOldGeneration.getMaxBuildHeight();
         }
@@ -312,11 +_,11 @@
         }
     }
 
-    protected void iterateHeights(int p_190296_, int p_190297_, BlendingData.HeightConsumer p_190298_) {
+    protected void iterateHeights(me.alphamode.mcbig.math.BigInteger p_190296_, me.alphamode.mcbig.math.BigInteger p_190297_, BlendingData.HeightConsumer p_190298_) {
         for(int i = 0; i < this.heights.length; ++i) {
             double d0 = this.heights[i];
             if (d0 != Double.MAX_VALUE) {
-                p_190298_.consume(p_190296_ + getX(i), p_190297_ + getZ(i), d0);
+                p_190298_.consume(p_190296_.add(getX(i)), p_190297_.add(getZ(i)), d0);
             }
         }
     }
@@ -402,6 +_,6 @@
     }
 
     protected interface HeightConsumer {
-        void consume(int p_190367_, int p_190368_, double p_190369_);
+        void consume(me.alphamode.mcbig.math.BigInteger p_190367_, me.alphamode.mcbig.math.BigInteger p_190368_, double p_190369_);
     }
 }
