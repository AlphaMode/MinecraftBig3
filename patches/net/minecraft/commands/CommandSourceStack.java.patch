--- a/net/minecraft/commands/CommandSourceStack.java
+++ b/net/minecraft/commands/CommandSourceStack.java
@@ -47,7 +_,7 @@
     public static final SimpleCommandExceptionType ERROR_NOT_PLAYER = new SimpleCommandExceptionType(Component.translatable("permissions.requires.player"));
     public static final SimpleCommandExceptionType ERROR_NOT_ENTITY = new SimpleCommandExceptionType(Component.translatable("permissions.requires.entity"));
     private final CommandSource source;
-    private final Vec3 worldPosition;
+    private final me.alphamode.mcbig.core.BigVec3 worldPosition;
     private final ServerLevel level;
     private final int permissionLevel;
     private final String textName;
@@ -64,7 +_,7 @@
 
     public CommandSourceStack(
         CommandSource p_81302_,
-        Vec3 p_81303_,
+        me.alphamode.mcbig.core.BigVec3 p_81303_,
         Vec2 p_81304_,
         ServerLevel p_81305_,
         int p_81306_,
@@ -93,7 +_,7 @@
 
     protected CommandSourceStack(
         CommandSource p_282943_,
-        Vec3 p_282023_,
+        me.alphamode.mcbig.core.BigVec3 p_282023_,
         Vec2 p_282896_,
         ServerLevel p_282659_,
         int p_283075_,
@@ -165,7 +_,7 @@
             );
     }
 
-    public CommandSourceStack withPosition(Vec3 p_81349_) {
+    public CommandSourceStack withPosition(me.alphamode.mcbig.core.BigVec3 p_81349_) {
         return this.worldPosition.equals(p_81349_)
             ? this
             : new CommandSourceStack(
@@ -322,7 +_,7 @@
             return this;
         } else {
             double d0 = DimensionType.getTeleportationScale(this.level.dimensionType(), p_81328_.dimensionType());
-            Vec3 vec3 = new Vec3(this.worldPosition.x * d0, this.worldPosition.y, this.worldPosition.z * d0);
+            me.alphamode.mcbig.core.BigVec3 vec3 = new me.alphamode.mcbig.core.BigVec3(this.worldPosition.x.multiply(d0), this.worldPosition.y, this.worldPosition.z.multiply(d0));
             return new CommandSourceStack(
                 this.source,
                 vec3,
@@ -346,11 +_,11 @@
         return this.facing(p_81333_.apply(p_81332_));
     }
 
-    public CommandSourceStack facing(Vec3 p_81365_) {
-        Vec3 vec3 = this.anchor.apply(this);
-        double d0 = p_81365_.x - vec3.x;
+    public CommandSourceStack facing(me.alphamode.mcbig.core.BigVec3 p_81365_) {
+        me.alphamode.mcbig.core.BigVec3 vec3 = this.anchor.apply(this);
+        double d0 = p_81365_.x.subtract(vec3.x).doubleValue();
         double d1 = p_81365_.y - vec3.y;
-        double d2 = p_81365_.z - vec3.z;
+        double d2 = p_81365_.z.subtract(vec3.z).doubleValue();
         double d3 = Math.sqrt(d0 * d0 + d2 * d2);
         float f = Mth.wrapDegrees((float)(-(Mth.atan2(d1, d3) * 180.0F / (float)Math.PI)));
         float f1 = Mth.wrapDegrees((float)(Mth.atan2(d2, d0) * 180.0F / (float)Math.PI) - 90.0F);
@@ -391,7 +_,7 @@
         return this.permissionLevel >= p_81370_;
     }
 
-    public Vec3 getPosition() {
+    public me.alphamode.mcbig.core.BigVec3 getPosition() {
         return this.worldPosition;
     }
 
