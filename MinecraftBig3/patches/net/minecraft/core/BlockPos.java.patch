--- a/net/minecraft/core/BlockPos.java
+++ b/net/minecraft/core/BlockPos.java
@@ -15,6 +_,8 @@
 import java.util.stream.Stream;
 import java.util.stream.StreamSupport;
 import javax.annotation.concurrent.Immutable;
+
+import me.alphamode.mcbig.math.BigInteger;
 import net.minecraft.Util;
 import net.minecraft.util.Mth;
 import net.minecraft.util.RandomSource;
@@ -27,11 +_,11 @@
 import org.slf4j.Logger;
 
 @Immutable
-public class BlockPos extends Vec3i {
-    public static final Codec<BlockPos> CODEC = Codec.INT_STREAM
+public class BlockPos extends me.alphamode.mcbig.core.Vec3l {
+    public static final Codec<BlockPos> CODEC = me.alphamode.mcbig.core.ModdedCodec.STRING_STREAM
         .<BlockPos>comapFlatMap(
-            p_121967_ -> Util.fixedSize(p_121967_, 3).map(p_175270_ -> new BlockPos(p_175270_[0], p_175270_[1], p_175270_[2])),
-            p_121924_ -> IntStream.of(p_121924_.getX(), p_121924_.getY(), p_121924_.getZ())
+            p_121967_ -> Util.fixedSize(p_121967_, 3).map(p_175270_ -> new BlockPos(me.alphamode.mcbig.math.BigInteger.val(p_175270_[0]), me.alphamode.mcbig.math.BigInteger.val(p_175270_[1]), me.alphamode.mcbig.math.BigInteger.val(p_175270_[2]))),
+            p_121924_ -> Stream.of(p_121924_.getBigX().toString(), p_121924_.getBigY().toString(), p_121924_.getBigZ().toString())
         )
         .stable();
     private static final Logger LOGGER = LogUtils.getLogger();
@@ -47,13 +_,25 @@
     private static final int X_OFFSET = PACKED_Y_LENGTH + PACKED_Z_LENGTH;
 
     public BlockPos(int p_121869_, int p_121870_, int p_121871_) {
+        super(me.alphamode.mcbig.math.BigInteger.val(p_121869_), me.alphamode.mcbig.math.BigInteger.val(p_121870_), me.alphamode.mcbig.math.BigInteger.val(p_121871_));
+    }
+
+    public BlockPos(me.alphamode.mcbig.math.BigInteger p_121869_, me.alphamode.mcbig.math.BigInteger p_121870_, me.alphamode.mcbig.math.BigInteger p_121871_) {
         super(p_121869_, p_121870_, p_121871_);
     }
 
+    public BlockPos(me.alphamode.mcbig.math.BigInteger p_121869_, long p_121870_, me.alphamode.mcbig.math.BigInteger p_121871_) {
+        this(p_121869_, me.alphamode.mcbig.math.BigInteger.val(p_121870_), p_121871_);
+    }
+
     public BlockPos(Vec3i p_121877_) {
         this(p_121877_.getX(), p_121877_.getY(), p_121877_.getZ());
     }
 
+    public BlockPos(me.alphamode.mcbig.core.Vec3l p_121877_) {
+        this(p_121877_.getX(), p_121877_.getY(), p_121877_.getZ());
+    }
+
     public static long offset(long p_121916_, Direction p_121917_) {
         return offset(p_121916_, p_121917_.getStepX(), p_121917_.getStepY(), p_121917_.getStepZ());
     }
@@ -79,7 +_,7 @@
     }
 
     public static BlockPos containing(double p_275310_, double p_275414_, double p_275737_) {
-        return new BlockPos(Mth.floor(p_275310_), Mth.floor(p_275414_), Mth.floor(p_275737_));
+        return new BlockPos(Mth.bigFloor(p_275310_), Mth.bigFloor(p_275414_), Mth.bigFloor(p_275737_));
     }
 
     public static BlockPos containing(Position p_275443_) {
@@ -104,7 +_,13 @@
     public BlockPos offset(int p_121973_, int p_121974_, int p_121975_) {
         return p_121973_ == 0 && p_121974_ == 0 && p_121975_ == 0
             ? this
-            : new BlockPos(this.getX() + p_121973_, this.getY() + p_121974_, this.getZ() + p_121975_);
+            : new BlockPos(this.getBigX().add(p_121973_), this.getBigY().add(p_121974_), this.getBigZ().add(p_121975_));
+    }
+
+    public BlockPos offset(BigInteger p_121973_, BigInteger p_121974_, BigInteger p_121975_) {
+        return p_121973_.equals(BigInteger.ZERO) && p_121974_.equals(BigInteger.ZERO) && p_121975_.equals(BigInteger.ZERO)
+                ? this
+                : new BlockPos(this.getBigX().add(p_121973_), this.getBigY().add(p_121974_), this.getBigZ().add(p_121975_));
     }
 
     public Vec3 getCenter() {
@@ -115,6 +_,14 @@
         return this.offset(p_121956_.getX(), p_121956_.getY(), p_121956_.getZ());
     }
 
+    public BlockPos subtract(me.alphamode.mcbig.core.Vec3l p_121997_) {
+        return this.offset(p_121997_.getBigX().negate(), p_121997_.getBigY().negate(), p_121997_.getBigZ().negate());
+    }
+
+    public BlockPos offset(me.alphamode.mcbig.core.Vec3l p_121956_) {
+        return this.offset(p_121956_.getBigX(), p_121956_.getBigY(), p_121956_.getBigZ());
+    }
+
     public BlockPos subtract(Vec3i p_121997_) {
         return this.offset(-p_121997_.getX(), -p_121997_.getY(), -p_121997_.getZ());
     }
@@ -123,7 +_,7 @@
         if (p_175263_ == 1) {
             return this;
         } else {
-            return p_175263_ == 0 ? ZERO : new BlockPos(this.getX() * p_175263_, this.getY() * p_175263_, this.getZ() * p_175263_);
+            return p_175263_ == 0 ? ZERO : new BlockPos(this.getBigX().multiply(p_175263_), this.getBigY().multiply(p_175263_), this.getBigZ().multiply(p_175263_));
         }
     }
 
@@ -176,14 +_,14 @@
     }
 
     public BlockPos relative(Direction p_121946_) {
-        return new BlockPos(this.getX() + p_121946_.getStepX(), this.getY() + p_121946_.getStepY(), this.getZ() + p_121946_.getStepZ());
+        return new BlockPos(this.getBigX().add(p_121946_.getStepX()), this.getBigY().add(p_121946_.getStepY()), this.getBigZ().add(p_121946_.getStepZ()));
     }
 
     public BlockPos relative(Direction p_121948_, int p_121949_) {
         return p_121949_ == 0
             ? this
             : new BlockPos(
-                this.getX() + p_121948_.getStepX() * p_121949_, this.getY() + p_121948_.getStepY() * p_121949_, this.getZ() + p_121948_.getStepZ() * p_121949_
+                this.getBigX().add(p_121948_.getStepX() * p_121949_), this.getBigY().add(p_121948_.getStepY() * p_121949_), this.getBigZ().add(p_121948_.getStepZ() * p_121949_)
             );
     }
 
@@ -194,7 +_,7 @@
             int i = p_121943_ == Direction.Axis.X ? p_121944_ : 0;
             int j = p_121943_ == Direction.Axis.Y ? p_121944_ : 0;
             int k = p_121943_ == Direction.Axis.Z ? p_121944_ : 0;
-            return new BlockPos(this.getX() + i, this.getY() + j, this.getZ() + k);
+            return new BlockPos(this.getBigX().add(i), this.getBigY().add(j), this.getBigZ().add(k));
         }
     }
 
@@ -204,24 +_,24 @@
             default:
                 return this;
             case CLOCKWISE_90:
-                return new BlockPos(-this.getZ(), this.getY(), this.getX());
+                return new BlockPos(this.getBigZ().negate(), this.getBigY(), this.getBigX());
             case CLOCKWISE_180:
-                return new BlockPos(-this.getX(), this.getY(), -this.getZ());
+                return new BlockPos(this.getBigX().negate(), this.getBigY(), this.getBigZ().negate());
             case COUNTERCLOCKWISE_90:
-                return new BlockPos(this.getZ(), this.getY(), -this.getX());
+                return new BlockPos(this.getBigZ(), this.getBigY(), this.getBigX().negate());
         }
     }
 
-    public BlockPos cross(Vec3i p_122011_) {
+    public BlockPos cross(me.alphamode.mcbig.core.Vec3l p_122011_) {
         return new BlockPos(
-            this.getY() * p_122011_.getZ() - this.getZ() * p_122011_.getY(),
-            this.getZ() * p_122011_.getX() - this.getX() * p_122011_.getZ(),
-            this.getX() * p_122011_.getY() - this.getY() * p_122011_.getX()
+            this.getBigY().multiply(p_122011_.getBigZ()).subtract(this.getBigZ().multiply(p_122011_.getBigY())),
+            this.getBigZ().multiply(p_122011_.getBigX()).subtract(this.getBigX().multiply(p_122011_.getBigZ())),
+            this.getBigX().multiply(p_122011_.getBigY()).subtract(this.getBigY().multiply(p_122011_.getBigX()))
         );
     }
 
     public BlockPos atY(int p_175289_) {
-        return new BlockPos(this.getX(), p_175289_, this.getZ());
+        return new BlockPos(this.getBigX(), me.alphamode.mcbig.math.BigInteger.val(p_175289_), this.getBigZ());
     }
 
     public BlockPos immutable() {
@@ -275,9 +_,9 @@
 
     public static Iterable<BlockPos> withinManhattan(BlockPos p_121926_, int p_121927_, int p_121928_, int p_121929_) {
         int i = p_121927_ + p_121928_ + p_121929_;
-        int j = p_121926_.getX();
-        int k = p_121926_.getY();
-        int l = p_121926_.getZ();
+        me.alphamode.mcbig.math.BigInteger j = p_121926_.getBigX();
+        me.alphamode.mcbig.math.BigInteger k = p_121926_.getBigY();
+        me.alphamode.mcbig.math.BigInteger l = p_121926_.getBigZ();
         return () -> new AbstractIterator<BlockPos>() {
                 private final BlockPos.MutableBlockPos cursor = new BlockPos.MutableBlockPos();
                 private int currentDepth;
@@ -290,7 +_,7 @@
                 protected BlockPos computeNext() {
                     if (this.zMirror) {
                         this.zMirror = false;
-                        this.cursor.setZ(l - (this.cursor.getZ() - l));
+                        this.cursor.setZ(l.subtract((this.cursor.getBigZ().subtract(l))));
                         return this.cursor;
                     } else {
                         BlockPos blockpos;
@@ -316,7 +_,7 @@
                             int k1 = this.currentDepth - Math.abs(i1) - Math.abs(j1);
                             if (k1 <= p_121929_) {
                                 this.zMirror = k1 != 0;
-                                blockpos = this.cursor.set(j + i1, k + j1, l + k1);
+                                blockpos = this.cursor.set(j.intValue() + i1, k.intValue() + j1, l.intValue() + k1);
                             }
                         }
 
@@ -414,15 +_,15 @@
                 private int leg = -1;
                 private int legSize;
                 private int legIndex;
-                private int lastX = this.cursor.getX();
-                private int lastY = this.cursor.getY();
-                private int lastZ = this.cursor.getZ();
+                private me.alphamode.mcbig.math.BigInteger lastX = this.cursor.getBigX();
+                private me.alphamode.mcbig.math.BigInteger lastY = this.cursor.getBigY();
+                private me.alphamode.mcbig.math.BigInteger lastZ = this.cursor.getBigZ();
 
                 protected BlockPos.MutableBlockPos computeNext() {
                     this.cursor.set(this.lastX, this.lastY, this.lastZ).move(this.directions[(this.leg + 4) % 4]);
-                    this.lastX = this.cursor.getX();
-                    this.lastY = this.cursor.getY();
-                    this.lastZ = this.cursor.getZ();
+                    this.lastX = this.cursor.getBigX();
+                    this.lastY = this.cursor.getBigY();
+                    this.lastZ = this.cursor.getBigZ();
                     if (this.legIndex >= this.legSize) {
                         if (this.leg >= this.legs) {
                             return this.endOfData();
@@ -475,6 +_,10 @@
             super(p_122130_, p_122131_, p_122132_);
         }
 
+        public MutableBlockPos(me.alphamode.mcbig.math.BigInteger p_122130_, me.alphamode.mcbig.math.BigInteger p_122131_, me.alphamode.mcbig.math.BigInteger p_122132_) {
+            super(p_122130_, p_122131_, p_122132_);
+        }
+
         public MutableBlockPos(double p_122126_, double p_122127_, double p_122128_) {
             this(Mth.floor(p_122126_), Mth.floor(p_122127_), Mth.floor(p_122128_));
         }
@@ -504,10 +_,17 @@
             return super.rotate(p_122138_).immutable();
         }
 
-        public BlockPos.MutableBlockPos set(int p_122179_, int p_122180_, int p_122181_) {
-            this.setX(p_122179_);
-            this.setY(p_122180_);
-            this.setZ(p_122181_);
+        public BlockPos.MutableBlockPos set(long p_122179_, long p_122180_, long p_122181_) {
+            this.setX(me.alphamode.mcbig.math.BigInteger.val(p_122179_));
+            this.setY(me.alphamode.mcbig.math.BigInteger.val(p_122180_));
+            this.setZ(me.alphamode.mcbig.math.BigInteger.val(p_122181_));
+            return this;
+        }
+
+        public BlockPos.MutableBlockPos set(me.alphamode.mcbig.math.BigInteger x, me.alphamode.mcbig.math.BigInteger y, me.alphamode.mcbig.math.BigInteger z) {
+            this.setX(x);
+            this.setY(y);
+            this.setZ(z);
             return this;
         }
 
@@ -515,7 +_,7 @@
             return this.set(Mth.floor(p_122170_), Mth.floor(p_122171_), Mth.floor(p_122172_));
         }
 
-        public BlockPos.MutableBlockPos set(Vec3i p_122191_) {
+        public BlockPos.MutableBlockPos set(me.alphamode.mcbig.core.Vec3l p_122191_) {
             return this.set(p_122191_.getX(), p_122191_.getY(), p_122191_.getZ());
         }
 
@@ -531,16 +_,16 @@
             );
         }
 
-        public BlockPos.MutableBlockPos setWithOffset(Vec3i p_122160_, Direction p_122161_) {
-            return this.set(p_122160_.getX() + p_122161_.getStepX(), p_122160_.getY() + p_122161_.getStepY(), p_122160_.getZ() + p_122161_.getStepZ());
-        }
-
-        public BlockPos.MutableBlockPos setWithOffset(Vec3i p_122155_, int p_122156_, int p_122157_, int p_122158_) {
-            return this.set(p_122155_.getX() + p_122156_, p_122155_.getY() + p_122157_, p_122155_.getZ() + p_122158_);
-        }
-
-        public BlockPos.MutableBlockPos setWithOffset(Vec3i p_175307_, Vec3i p_175308_) {
-            return this.set(p_175307_.getX() + p_175308_.getX(), p_175307_.getY() + p_175308_.getY(), p_175307_.getZ() + p_175308_.getZ());
+        public BlockPos.MutableBlockPos setWithOffset(me.alphamode.mcbig.core.Vec3l p_122160_, Direction p_122161_) {
+            return this.set(p_122160_.getBigX().add(p_122161_.getStepX()), p_122160_.getBigY().add(p_122161_.getStepY()), p_122160_.getBigZ().add(p_122161_.getStepZ()));
+        }
+
+        public BlockPos.MutableBlockPos setWithOffset(me.alphamode.mcbig.core.Vec3l p_122155_, int p_122156_, int p_122157_, int p_122158_) {
+            return this.set(p_122155_.getBigX().add(p_122156_), p_122155_.getBigY().add(p_122157_), p_122155_.getBigZ().add(p_122158_));
+        }
+
+        public BlockPos.MutableBlockPos setWithOffset(me.alphamode.mcbig.core.Vec3l p_175307_, me.alphamode.mcbig.core.Vec3l p_175308_) {
+            return this.set(p_175307_.getBigX().add(p_175308_.getBigX()), p_175307_.getBigY().add(p_175308_.getBigY()), p_175307_.getBigZ().add(p_175308_.getBigZ()));
         }
 
         public BlockPos.MutableBlockPos move(Direction p_122174_) {
@@ -549,43 +_,58 @@
 
         public BlockPos.MutableBlockPos move(Direction p_122176_, int p_122177_) {
             return this.set(
-                this.getX() + p_122176_.getStepX() * p_122177_, this.getY() + p_122176_.getStepY() * p_122177_, this.getZ() + p_122176_.getStepZ() * p_122177_
+                this.getBigX().add(p_122176_.getStepX() * p_122177_), this.getBigY().add(p_122176_.getStepY() * p_122177_), this.getBigZ().add(p_122176_.getStepZ() * p_122177_)
             );
         }
 
         public BlockPos.MutableBlockPos move(int p_122185_, int p_122186_, int p_122187_) {
-            return this.set(this.getX() + p_122185_, this.getY() + p_122186_, this.getZ() + p_122187_);
+            return this.set(this.getBigX().add(p_122185_), this.getBigY().add(p_122186_), this.getBigZ().add(p_122187_));
         }
 
-        public BlockPos.MutableBlockPos move(Vec3i p_122194_) {
-            return this.set(this.getX() + p_122194_.getX(), this.getY() + p_122194_.getY(), this.getZ() + p_122194_.getZ());
+        public BlockPos.MutableBlockPos move(me.alphamode.mcbig.core.Vec3l p_122194_) {
+            return this.set(this.getBigX().add(p_122194_.getBigX()), this.getBigY().add(p_122194_.getBigY()), this.getBigZ().add(p_122194_.getBigZ()));
         }
 
         public BlockPos.MutableBlockPos clamp(Direction.Axis p_122148_, int p_122149_, int p_122150_) {
             switch(p_122148_) {
                 case X:
-                    return this.set(Mth.clamp(this.getX(), p_122149_, p_122150_), this.getY(), this.getZ());
+                    return this.set(Mth.clamp(this.getBigX(), me.alphamode.mcbig.math.BigInteger.val(p_122149_), me.alphamode.mcbig.math.BigInteger.val(p_122150_)), this.getBigY(), this.getBigZ());
                 case Y:
-                    return this.set(this.getX(), Mth.clamp(this.getY(), p_122149_, p_122150_), this.getZ());
+                    return this.set(this.getBigX(), Mth.clamp(this.getBigY(), me.alphamode.mcbig.math.BigInteger.val(p_122149_), me.alphamode.mcbig.math.BigInteger.val(p_122150_)), this.getBigZ());
                 case Z:
-                    return this.set(this.getX(), this.getY(), Mth.clamp(this.getZ(), p_122149_, p_122150_));
+                    return this.set(this.getBigX(), this.getBigY(), Mth.clamp(this.getBigZ(), me.alphamode.mcbig.math.BigInteger.val(p_122149_), me.alphamode.mcbig.math.BigInteger.val(p_122150_)));
                 default:
                     throw new IllegalStateException("Unable to clamp axis " + p_122148_);
             }
         }
 
-        public BlockPos.MutableBlockPos setX(int p_175341_) {
+        public BlockPos.MutableBlockPos setX(me.alphamode.mcbig.math.BigInteger p_175341_) {
             super.setX(p_175341_);
             return this;
         }
 
-        public BlockPos.MutableBlockPos setY(int p_175343_) {
+        public BlockPos.MutableBlockPos setX(long p_175341_) {
+            super.setX(me.alphamode.mcbig.math.BigInteger.val(p_175341_));
+            return this;
+        }
+
+        public BlockPos.MutableBlockPos setY(me.alphamode.mcbig.math.BigInteger p_175343_) {
             super.setY(p_175343_);
             return this;
         }
 
-        public BlockPos.MutableBlockPos setZ(int p_175345_) {
+        public BlockPos.MutableBlockPos setY(long p_175343_) {
+            super.setY(me.alphamode.mcbig.math.BigInteger.val(p_175343_));
+            return this;
+        }
+
+        public BlockPos.MutableBlockPos setZ(me.alphamode.mcbig.math.BigInteger p_175345_) {
             super.setZ(p_175345_);
+            return this;
+        }
+
+        public BlockPos.MutableBlockPos setZ(long p_175345_) {
+            super.setZ(me.alphamode.mcbig.math.BigInteger.val(p_175345_));
             return this;
         }
 
