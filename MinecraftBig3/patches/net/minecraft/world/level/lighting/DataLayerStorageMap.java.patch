--- a/net/minecraft/world/level/lighting/DataLayerStorageMap.java
+++ b/net/minecraft/world/level/lighting/DataLayerStorageMap.java
@@ -2,16 +_,18 @@
 
 import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;
 import javax.annotation.Nullable;
+
+import net.minecraft.core.SectionPos;
 import net.minecraft.world.level.chunk.DataLayer;
 
 public abstract class DataLayerStorageMap<M extends DataLayerStorageMap<M>> {
     private static final int CACHE_SIZE = 2;
-    private final long[] lastSectionKeys = new long[2];
+    private final SectionPos[] lastSectionKeys = new SectionPos[2];
     private final DataLayer[] lastSections = new DataLayer[2];
     private boolean cacheEnabled;
-    protected final Long2ObjectOpenHashMap<DataLayer> map;
+    protected final it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap<SectionPos, DataLayer> map;
 
-    protected DataLayerStorageMap(Long2ObjectOpenHashMap<DataLayer> p_75523_) {
+    protected DataLayerStorageMap(it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap<SectionPos, DataLayer> p_75523_) {
         this.map = p_75523_;
         this.clearCache();
         this.cacheEnabled = true;
@@ -19,19 +_,19 @@
 
     public abstract M copy();
 
-    public DataLayer copyDataLayer(long p_281841_) {
+    public DataLayer copyDataLayer(SectionPos p_281841_) {
         DataLayer datalayer = this.map.get(p_281841_).copy();
         this.map.put(p_281841_, datalayer);
         this.clearCache();
         return datalayer;
     }
 
-    public boolean hasLayer(long p_75530_) {
+    public boolean hasLayer(SectionPos p_75530_) {
         return this.map.containsKey(p_75530_);
     }
 
     @Nullable
-    public DataLayer getLayer(long p_75533_) {
+    public DataLayer getLayer(SectionPos p_75533_) {
         if (this.cacheEnabled) {
             for(int i = 0; i < 2; ++i) {
                 if (p_75533_ == this.lastSectionKeys[i]) {
@@ -59,17 +_,17 @@
     }
 
     @Nullable
-    public DataLayer removeLayer(long p_75536_) {
+    public DataLayer removeLayer(SectionPos p_75536_) {
         return this.map.remove(p_75536_);
     }
 
-    public void setLayer(long p_75527_, DataLayer p_75528_) {
+    public void setLayer(SectionPos p_75527_, DataLayer p_75528_) {
         this.map.put(p_75527_, p_75528_);
     }
 
     public void clearCache() {
         for(int i = 0; i < 2; ++i) {
-            this.lastSectionKeys[i] = Long.MAX_VALUE;
+            this.lastSectionKeys[i] = net.minecraft.server.level.SectionTracker.SOURCE;
             this.lastSections[i] = null;
         }
     }
