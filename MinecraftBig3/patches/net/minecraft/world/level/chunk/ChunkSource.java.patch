--- a/net/minecraft/world/level/chunk/ChunkSource.java
+++ b/net/minecraft/world/level/chunk/ChunkSource.java
@@ -8,27 +_,27 @@
 
 public abstract class ChunkSource implements LightChunkGetter, AutoCloseable {
     @Nullable
-    public LevelChunk getChunk(int p_62228_, int p_62229_, boolean p_62230_) {
+    public LevelChunk getChunk(me.alphamode.mcbig.math.BigInteger p_62228_, me.alphamode.mcbig.math.BigInteger p_62229_, boolean p_62230_) {
         return (LevelChunk)this.getChunk(p_62228_, p_62229_, ChunkStatus.FULL, p_62230_);
     }
 
     @Nullable
-    public LevelChunk getChunkNow(int p_62221_, int p_62222_) {
+    public LevelChunk getChunkNow(me.alphamode.mcbig.math.BigInteger p_62221_, me.alphamode.mcbig.math.BigInteger p_62222_) {
         return this.getChunk(p_62221_, p_62222_, false);
     }
 
     @Nullable
     @Override
-    public LightChunk getChunkForLighting(int p_62241_, int p_62242_) {
+    public LightChunk getChunkForLighting(me.alphamode.mcbig.math.BigInteger p_62241_, me.alphamode.mcbig.math.BigInteger p_62242_) {
         return this.getChunk(p_62241_, p_62242_, ChunkStatus.EMPTY, false);
     }
 
-    public boolean hasChunk(int p_62238_, int p_62239_) {
+    public boolean hasChunk(me.alphamode.mcbig.math.BigInteger p_62238_, me.alphamode.mcbig.math.BigInteger p_62239_) {
         return this.getChunk(p_62238_, p_62239_, ChunkStatus.FULL, false) != null;
     }
 
     @Nullable
-    public abstract ChunkAccess getChunk(int p_62223_, int p_62224_, ChunkStatus p_62225_, boolean p_62226_);
+    public abstract ChunkAccess getChunk(me.alphamode.mcbig.math.BigInteger p_62223_, me.alphamode.mcbig.math.BigInteger p_62224_, ChunkStatus p_62225_, boolean p_62226_);
 
     public abstract void tick(BooleanSupplier p_202162_, boolean p_202163_);
 
