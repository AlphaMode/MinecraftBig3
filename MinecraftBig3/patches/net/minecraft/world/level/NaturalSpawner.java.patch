--- a/net/minecraft/world/level/NaturalSpawner.java
+++ b/net/minecraft/world/level/NaturalSpawner.java
@@ -75,7 +_,7 @@
             if (mobcategory != MobCategory.MISC) {
                 BlockPos blockpos = entity.blockPosition();
                 p_186527_.query(
-                    ChunkPos.asLong(blockpos),
+                    new ChunkPos(blockpos),
                     p_275163_ -> {
                         MobSpawnSettings.MobSpawnCost mobspawnsettings$mobspawncost = getRoughBiome(blockpos, p_275163_)
                             .getMobSettings()
@@ -98,7 +_,7 @@
     }
 
     static Biome getRoughBiome(BlockPos p_47096_, ChunkAccess p_47097_) {
-        return p_47097_.getNoiseBiome(QuartPos.fromBlock(p_47096_.getX()), QuartPos.fromBlock(p_47096_.getY()), QuartPos.fromBlock(p_47096_.getZ())).value();
+        return p_47097_.getNoiseBiome(QuartPos.fromBlock(p_47096_.getBigX()), QuartPos.fromBlock(p_47096_.getBigY()), QuartPos.fromBlock(p_47096_.getBigZ())).value();
     }
 
     public static void spawnForChunk(
@@ -221,7 +_,7 @@
         if (p_47028_ <= 576.0) {
             return false;
         } else if (p_47025_.getSharedSpawnPos()
-            .closerToCenterThan(new Vec3((double)p_47027_.getX() + 0.5, (double)p_47027_.getY(), (double)p_47027_.getZ() + 0.5), 24.0)) {
+            .closerToCenterThan(new Vec3((double)p_47027_.getBigX().doubleValue() + 0.5, (double)p_47027_.getBigY().doubleValue(), (double)p_47027_.getBigZ().doubleValue() + 0.5), 24.0)) {
             return false;
         } else {
             return Objects.equals(new ChunkPos(p_47027_), p_47026_.getPos()) || p_47025_.isNaturalSpawningAllowed(p_47027_);
@@ -326,8 +_,8 @@
 
     private static BlockPos getRandomPosWithin(Level p_47063_, LevelChunk p_47064_) {
         ChunkPos chunkpos = p_47064_.getPos();
-        int i = chunkpos.getMinBlockX() + p_47063_.random.nextInt(16);
-        int j = chunkpos.getMinBlockZ() + p_47063_.random.nextInt(16);
+        me.alphamode.mcbig.math.BigInteger i = chunkpos.getBigMinBlockX().add(p_47063_.random.nextInt(16));
+        me.alphamode.mcbig.math.BigInteger j = chunkpos.getBigMinBlockZ().add(p_47063_.random.nextInt(16));
         int k = p_47064_.getHeight(Heightmap.Types.WORLD_SURFACE, i, j) + 1;
         int l = Mth.randomBetweenInclusive(p_47063_.random, p_47063_.getMinBuildHeight(), k);
         return new BlockPos(i, l, j);
@@ -486,7 +_,7 @@
 
     @FunctionalInterface
     public interface ChunkGetter {
-        void query(long p_47104_, Consumer<LevelChunk> p_47105_);
+        void query(ChunkPos p_47104_, Consumer<LevelChunk> p_47105_);
     }
 
     @FunctionalInterface
