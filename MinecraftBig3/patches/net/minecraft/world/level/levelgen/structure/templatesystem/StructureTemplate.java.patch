--- a/net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate.java
+++ b/net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate.java
@@ -232,12 +_,12 @@
                 List<BlockPos> list1 = Lists.newArrayListWithCapacity(p_230332_.shouldKeepLiquids() ? list.size() : 0);
                 List<BlockPos> list2 = Lists.newArrayListWithCapacity(p_230332_.shouldKeepLiquids() ? list.size() : 0);
                 List<Pair<BlockPos, CompoundTag>> list3 = Lists.newArrayListWithCapacity(list.size());
-                int i = Integer.MAX_VALUE;
-                int j = Integer.MAX_VALUE;
-                int k = Integer.MAX_VALUE;
-                int l = Integer.MIN_VALUE;
-                int i1 = Integer.MIN_VALUE;
-                int j1 = Integer.MIN_VALUE;
+                me.alphamode.mcbig.math.BigInteger i = me.alphamode.mcbig.math.BigInteger.val(Integer.MAX_VALUE);
+                me.alphamode.mcbig.math.BigInteger j = me.alphamode.mcbig.math.BigInteger.val(Integer.MAX_VALUE);
+                me.alphamode.mcbig.math.BigInteger k = me.alphamode.mcbig.math.BigInteger.val(Integer.MAX_VALUE);
+                me.alphamode.mcbig.math.BigInteger l = me.alphamode.mcbig.math.BigInteger.val(Integer.MIN_VALUE);
+                me.alphamode.mcbig.math.BigInteger i1 = me.alphamode.mcbig.math.BigInteger.val(Integer.MIN_VALUE);
+                me.alphamode.mcbig.math.BigInteger j1 = me.alphamode.mcbig.math.BigInteger.val(Integer.MIN_VALUE);
 
                 for(StructureTemplate.StructureBlockInfo structuretemplate$structureblockinfo : processBlockInfos(
                     p_230329_, p_230330_, p_230331_, p_230332_, list
@@ -253,12 +_,12 @@
                         }
 
                         if (p_230329_.setBlock(blockpos, blockstate, p_230334_)) {
-                            i = Math.min(i, blockpos.getX());
-                            j = Math.min(j, blockpos.getY());
-                            k = Math.min(k, blockpos.getZ());
-                            l = Math.max(l, blockpos.getX());
-                            i1 = Math.max(i1, blockpos.getY());
-                            j1 = Math.max(j1, blockpos.getZ());
+                            i = i.min(blockpos.getBigX());
+                            j = j.min(blockpos.getBigY());
+                            k = k.min(blockpos.getBigZ());
+                            l = l.max(blockpos.getBigX());
+                            i1 = i1.max(blockpos.getBigY());
+                            j1 = j1.max(blockpos.getBigZ());
                             list3.add(Pair.of(blockpos, structuretemplate$structureblockinfo.nbt));
                             if (structuretemplate$structureblockinfo.nbt != null) {
                                 BlockEntity blockentity1 = p_230329_.getBlockEntity(blockpos);
@@ -316,16 +_,16 @@
                     }
                 }
 
-                if (i <= l) {
+                if (i.compareTo(l) <= 0) {
                     if (!p_230332_.getKnownShape()) {
-                        DiscreteVoxelShape discretevoxelshape = new BitSetDiscreteVoxelShape(l - i + 1, i1 - j + 1, j1 - k + 1);
-                        int k1 = i;
-                        int l1 = j;
-                        int j2 = k;
+                        DiscreteVoxelShape discretevoxelshape = new BitSetDiscreteVoxelShape(l.subtract(i).add().intValue(), i1.subtract(j).add().intValue(), j1.subtract(k).add().intValue());
+                        me.alphamode.mcbig.math.BigInteger k1 = i;
+                        me.alphamode.mcbig.math.BigInteger l1 = j;
+                        me.alphamode.mcbig.math.BigInteger j2 = k;
 
                         for(Pair<BlockPos, CompoundTag> pair1 : list3) {
                             BlockPos blockpos2 = pair1.getFirst();
-                            discretevoxelshape.fill(blockpos2.getX() - k1, blockpos2.getY() - l1, blockpos2.getZ() - j2);
+                            discretevoxelshape.fill(blockpos2.getBigX().subtract(k1).intValue(), blockpos2.getBigY().subtract(l1).intValue(), blockpos2.getBigZ().subtract(j2).intValue());
                         }
 
                         updateShapeAtEdge(p_230329_, p_230334_, discretevoxelshape, k1, l1, j2);
@@ -371,9 +_,9 @@
         }
     }
 
-    public static void updateShapeAtEdge(LevelAccessor p_74511_, int p_74512_, DiscreteVoxelShape p_74513_, int p_74514_, int p_74515_, int p_74516_) {
+    public static void updateShapeAtEdge(LevelAccessor p_74511_, int p_74512_, DiscreteVoxelShape p_74513_, me.alphamode.mcbig.math.BigInteger p_74514_, me.alphamode.mcbig.math.BigInteger p_74515_, me.alphamode.mcbig.math.BigInteger p_74516_) {
         p_74513_.forAllFaces((p_74494_, p_74495_, p_74496_, p_74497_) -> {
-            BlockPos blockpos = new BlockPos(p_74514_ + p_74495_, p_74515_ + p_74496_, p_74516_ + p_74497_);
+            BlockPos blockpos = new BlockPos(p_74514_.add(p_74495_), p_74515_.add(p_74496_), p_74516_.add(p_74497_));
             BlockPos blockpos1 = blockpos.relative(p_74494_);
             BlockState blockstate = p_74511_.getBlockState(blockpos);
             BlockState blockstate1 = p_74511_.getBlockState(blockpos1);
